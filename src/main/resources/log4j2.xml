<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<xml checking="error">

    <properties>
        <!-- 基本的文件的输出信息的配置 -->
        <property name="LOG_File_NAME">TaskManager</property>
        <property name="LOG_HOME">/devcloud/log/TaskManager</property>
        <!-- <property name="LOG_HOME">d:/test/logs/${LOG_File_NAME}</property>-->
    </properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS zzz}]-[%t]-[%-5p]-%l%n---%m%n"/>
        </Console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用
        <File name="log" fileName="/tmp/tmp.log" append="false">
            <PatternLayout pattern="[%level] %d{yyyy-MM-dd HH:mm:ss} %class.%M(%file:%L) - %msg%xEx%n"/>
        </File>-->

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="info" fileName="${LOG_HOME}/${LOG_File_NAME}.log"
                     filePattern="${LOG_HOME}/${LOG_File_NAME}.%d{yyyy-MM-dd}.log">
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS zzz}]-[%t]-[%-5p]-%l%n---%m%n"/>
            <!--   <SizeBasedTriggeringPolicy size="100MB"/>-->
            <Policies>
                <!-- 每天生成一个日志文件 -->
                <!-- interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟 -->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>
        <RollingFile name="error" fileName="${LOG_HOME}/${LOG_File_NAME}-error.log"
                     filePattern="${LOG_HOME}/${LOG_File_NAME}-error.%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS zzz}]-[%t]-[%-5p]-%l%n---%m%n"/>
            <!--   <SizeBasedTriggeringPolicy size="100MB"/>-->
            <Policies>
                <!-- 每天生成一个日志文件 -->
                <!-- interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟 -->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>
        <RollingFile name="debug" fileName="${LOG_HOME}/${LOG_File_NAME}-debug.log"
                     filePattern="${LOG_HOME}/${LOG_File_NAME}-debug.%d{yyyy-MM-dd}.log">
            <Filters>
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS zzz}]-[%t]-[%-5p]-%l%n---%m%n"/>

            <!--   <SizeBasedTriggeringPolicy size="100MB"/>-->
            <Policies>
                <!-- 每天生成一个日志文件 -->
                <!-- interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟 -->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger-->
        <root level="debug">
            <appender-ref ref="debug"/>
            <appender-ref ref="error"/>
            <appender-ref ref="info"/>
            <appender-ref ref="Console"/>
        </root>

    </loggers>
</xml>